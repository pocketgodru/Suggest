from mongo_client import MongoMovieClient
from redis_client import RedisMovieClient
import time


class MongoToRedisMigrator:
    def __init__(self):
        self.mongo_client = MongoMovieClient()
        self.redis_client = RedisMovieClient()

    def clear_redis(self):
        """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ Redis."""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ –∏ —É–¥–∞–ª—è–µ–º –∏—Ö
            self.redis_client.redis_client.flushall()
            print(f"üßπ Redis –æ—á–∏—â–µ–Ω. –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∫–ª—é—á–∏.")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ Redis: {str(e)}")
            return False

    def migrate_movies(self):
        """–ü–µ—Ä–µ–Ω–æ—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ MongoDB –≤ Redis."""
        start_time = time.time()

        # –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º Redis
        print("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É Redis...")
        if not self.clear_redis():
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å Redis. –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
            return

        movies_list = self.mongo_client.get_movies()
        if not movies_list:
            print("‚ö†Ô∏è –í MongoDB –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞!")
            return

        print(f"üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(movies_list)} —Ñ–∏–ª—å–º–æ–≤ –∏–∑ MongoDB. –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å –≤ Redis...")

        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
        normalized_movies = []

        for movie in movies_list:
            movie_id = movie.get("_id")

            if not movie_id:
                print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω —Ñ–∏–ª—å–º –±–µ–∑ ID: {movie}")
                continue

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª–µ–π —Ñ–∏–ª—å–º–∞
            release_years = movie.get("releaseYears", [])
            release_year = None
            if release_years and isinstance(release_years, list) and len(release_years) > 0:
                if isinstance(release_years[0], dict) and "start" in release_years[0]:
                    release_year = release_years[0]["start"]
            
            if release_year is None:
                release_year = movie.get("year", 2000)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç–µ—Ä–∞
            poster = movie.get("poster", "")
            if poster is None:
                poster = ""
            elif isinstance(poster, dict):
                # –ï—Å–ª–∏ –ø–æ—Å—Ç–µ—Ä - —Å–ª–æ–≤–∞—Ä—å, –∏–∑–≤–ª–µ–∫–∞–µ–º URL
                poster = poster.get("url", "")

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∂–∞–Ω—Ä–æ–≤
            genres = []
            movie_genres = movie.get("genres", [])
            if movie_genres and isinstance(movie_genres, list):
                for genre in movie_genres:
                    if isinstance(genre, dict) and "name" in genre:
                        genres.append(genre["name"].lower())
                    elif isinstance(genre, str):
                        genres.append(genre.lower())

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω
            countries = []
            movie_countries = movie.get("countries", [])
            if movie_countries and isinstance(movie_countries, list):
                for country in movie_countries:
                    if isinstance(country, dict) and "name" in country:
                        countries.append(country["name"])
                    elif isinstance(country, str):
                        countries.append(country)

            # –°–æ–∑–¥–∞–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ñ–∏–ª—å–º
            normalized_movie = {
                "_id": movie_id,
                "name": movie.get("name", ""),
                "type": movie.get("type", ""),
                "year": movie.get("year", 2000),
                "description": movie.get("description", "") or "",
                "shortDescription": movie.get("shortDescription", "") or "",
                "status": movie.get("status", ""),
                "rating": movie.get("rating", 0),
                "ageRating": movie.get("ageRating", ""),
                "poster": poster,
                "genres": genres,
                "countries": countries,
                "releaseYear": release_year,
                "isSeries": movie.get("isSeries", False),
                "category": movie.get("category", ""),
                "alternativeName": movie.get("alternativeName", "")
            }

            normalized_movies.append(normalized_movie)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ñ–∏–ª—å–º—ã –≤ Redis
        saved_count = self.redis_client.save_movies_bulk(normalized_movies)

        elapsed_time = time.time() - start_time
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ {saved_count} —Ñ–∏–ª—å–º–æ–≤ –≤ Redis –∑–∞ {elapsed_time:.2f} —Å–µ–∫!")

if __name__ == "__main__":
    migrator = MongoToRedisMigrator()
    migrator.migrate_movies()
